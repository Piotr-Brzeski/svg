//
//  main.cpp
//  bond_percolation
//
//  Created by Piotr Brzeski on 2023-01-24.
//

#include "../svg/spheres.h"
#include <iostream>
#include <array>

namespace {

constexpr auto model_0 = std::array<std::array<int, 21>, 40>{
	{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
};
constexpr auto cluster_0 = 0;

constexpr auto model_157 = std::array<std::array<int, 21>, 40>{
	{{0, 0, 5, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{5, 5, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 22, 64, 0, 0, 0, 34, 0},
	{0, 0, 28, 31, 86, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 64, 88, 0, 0, 0, 0},
	{0, 57, 0, 31, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0},
	{0, 0, 0, 0, 0, 90, 0, 0, 40, 0, 0, 0, 0, 0, 0, 70, 0, 83, 33, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 1, 0, 80, 0, 0, 0, 0, 0, 0},
	{0, 0, 20, 20, 20, 26, 0, 0, 0, 79, 53, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0},
	{0, 81, 0, 0, 0, 26, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0},
	{55, 30, 0, 0, 0, 0, 0, 47, 47, 47, 0, 0, 0, 77, 0, 0, 0, 0, 50, 0, 0},
	{55, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 16, 0, 0, 0, 0, 0, 25, 32, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 29, 25, 25, 32, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0},
	{0, 4, 92, 0, 71, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{72, 15, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 78, 0, 73},
	{0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 4, 0, 0, 0, 0},
	{0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0, 0, 15, 0},
	{0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 30, 0, 56, 0, 0, 0, 0, 74, 15, 0},
	{0, 0, 0, 0, 0, 0, 3, 0, 20, 0, 69, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0},
	{48, 0, 0, 0, 0, 90, 3, 0, 0, 26, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 44, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 43, 0},
	{89, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 9, 0, 0, 0, 0, 0, 43, 82},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 9, 0, 25, 0, 0, 0, 0, 0},
	{0, 27, 0, 0, 0, 2, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 7, 0, 0, 2, 0, 0, 0, 0, 0, 0, 66, 46, 0, 0, 0, 13, 0, 0, 0},
	{0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 13, 0, 0, 0},
	{41, 0, 0, 7, 0, 36, 0, 0, 0, 0, 0, 77, 0, 46, 0, 0, 0, 13, 0, 0, 8},
	{0, 22, 0, 0, 65, 36, 0, 0, 0, 42, 0, 77, 0, 0, 68, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 37, 0, 0, 76, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 76, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 84, 0, 0, 0},
	{0, 0, 0, 33, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 75, 87, 23, 0, 0, 0, 0},
	{0, 34, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 63, 0, 0, 23, 0, 0, 0, 0},
	{0, 0, 0, 24, 0, 0, 0, 0, 0, 67, 0, 18, 52, 63, 0, 0, 0, 0, 85, 73, 0}}
};
constexpr auto cluster_157 = 47;

constexpr auto model_314 = std::array<std::array<int, 21>, 40>{
	{{5, 5, 5, 0, 48, 48, 0, 0, 0, 0, 0, 22, 0, 22, 22, 0, 0, 0, 0, 0, 0},
	{5, 5, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 22, 22, 0, 0, 33, 33, 0},
	{0, 0, 28, 28, 86, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 22, 88, 0, 33, 0, 0},
	{0, 57, 0, 28, 0, 0, 11, 0, 40, 0, 0, 0, 0, 0, 0, 22, 88, 0, 33, 0, 24},
	{0, 0, 112, 28, 28, 28, 0, 11, 40, 0, 2, 0, 0, 22, 0, 22, 0, 83, 33, 0, 0},
	{0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 35, 3, 0, 3, 0, 0, 0, 0, 0, 53, 0, 1, 102, 80, 115, 0, 0, 0, 101, 0},
	{0, 0, 3, 3, 3, 3, 0, 0, 0, 79, 53, 0, 0, 102, 0, 0, 0, 38, 38, 0, 0},
	{0, 81, 0, 0, 3, 3, 0, 91, 0, 0, 0, 111, 0, 0, 0, 117, 38, 0, 0, 38, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 13, 0, 42, 0, 38, 0, 38, 0, 38},
	{55, 30, 30, 0, 9, 0, 0, 9, 9, 9, 0, 9, 0, 13, 0, 0, 0, 0, 38, 0, 0},
	{55, 0, 0, 0, 9, 9, 9, 9, 0, 9, 0, 9, 0, 0, 13, 0, 0, 0, 0, 0, 0},
	{55, 0, 0, 0, 9, 0, 9, 0, 0, 9, 9, 0, 0, 9, 0, 13, 0, 13, 0, 0, 0},
	{0, 105, 0, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 0, 13, 0, 0, 0, 23, 23, 0},
	{0, 0, 0, 9, 0, 0, 0, 0, 0, 9, 9, 0, 0, 13, 0, 0, 0, 0, 23, 0, 0},
	{4, 0, 15, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 13, 13, 13, 0, 0, 23, 0, 0},
	{4, 4, 15, 0, 15, 0, 9, 0, 9, 9, 0, 0, 0, 13, 0, 0, 0, 0, 23, 0, 0},
	{4, 0, 0, 15, 0, 0, 0, 43, 0, 9, 13, 0, 13, 0, 110, 0, 0, 84, 0, 0, 0},
	{0, 0, 15, 0, 0, 0, 0, 43, 0, 9, 13, 0, 0, 107, 0, 0, 0, 84, 78, 0, 0},
	{72, 15, 0, 15, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 19, 0, 0, 78, 0, 73},
	{0, 5, 0, 0, 0, 103, 35, 0, 0, 0, 0, 0, 55, 0, 105, 0, 4, 4, 0, 0, 0},
	{5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0, 0, 15, 0},
	{0, 0, 0, 28, 0, 0, 3, 3, 0, 0, 0, 30, 0, 9, 0, 0, 0, 15, 15, 15, 0},
	{0, 0, 0, 0, 28, 0, 3, 0, 3, 0, 9, 0, 9, 9, 9, 9, 0, 15, 0, 15, 0},
	{48, 0, 0, 0, 0, 28, 3, 0, 0, 3, 0, 0, 0, 9, 0, 0, 15, 0, 0, 0, 0},
	{48, 0, 44, 11, 0, 28, 0, 3, 0, 0, 0, 9, 9, 9, 0, 99, 0, 9, 0, 43, 0},
	{0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 9, 9, 0, 0, 9, 0, 9, 0, 0, 43, 82},
	{89, 0, 6, 0, 0, 0, 0, 0, 91, 91, 0, 9, 0, 9, 9, 9, 9, 0, 0, 43, 82},
	{0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 9, 9, 0, 9, 0, 9, 9, 9, 0, 0, 0},
	{0, 27, 0, 40, 0, 2, 0, 0, 0, 17, 0, 0, 0, 9, 0, 9, 0, 0, 0, 0, 0},
	{0, 0, 7, 0, 0, 2, 0, 0, 0, 0, 0, 0, 9, 9, 0, 9, 0, 13, 13, 0, 0},
	{22, 22, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 9, 0, 13, 13, 0, 0},
	{22, 22, 0, 7, 0, 22, 0, 0, 0, 0, 13, 13, 0, 9, 0, 0, 0, 13, 0, 0, 8},
	{0, 22, 0, 7, 22, 22, 0, 0, 0, 42, 0, 13, 0, 0, 13, 0, 13, 0, 0, 0, 8},
	{0, 22, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 13, 13, 13, 0, 13, 0, 0, 0, 0},
	{0, 22, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 13, 84, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 38, 38, 0, 0, 116, 13, 0, 23, 0, 0, 84, 0, 84, 0},
	{0, 0, 0, 33, 0, 0, 101, 0, 38, 38, 0, 0, 0, 0, 23, 23, 23, 0, 0, 0, 78},
	{118, 33, 0, 0, 0, 0, 101, 0, 38, 38, 38, 0, 52, 23, 0, 0, 23, 0, 78, 0, 0},
	{0, 0, 0, 24, 0, 0, 101, 0, 38, 38, 0, 18, 52, 23, 0, 98, 0, 94, 78, 73, 0}}
};
constexpr auto cluster_314 = 9;

constexpr auto model_473 = std::array<std::array<int, 21>, 40>{
	{{1, 1, 1, 0, 1, 1, 0, 6, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0},
	{1, 1, 0, 1, 0, 0, 6, 6, 6, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0},
	{0, 0, 1, 1, 86, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0},
	{0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 24},
	{1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
	{1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1},
	{0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0},
	{0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0},
	{0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1},
	{1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1},
	{1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 123, 1, 0, 1, 1, 1},
	{1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0},
	{1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0},
	{0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0},
	{1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0},
	{1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0},
	{1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1},
	{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 107, 1, 0, 1, 0, 0, 1},
	{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 107, 0, 0, 1, 1, 1, 0, 0},
	{1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 19, 0, 0, 1, 0, 1},
	{1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0},
	{1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0},
	{0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0},
	{0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0},
	{1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0},
	{1, 0, 6, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0},
	{0, 6, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 82},
	{6, 0, 6, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 82},
	{0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0},
	{0, 27, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 8},
	{0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 8},
	{1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 8},
	{1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 8},
	{1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 107, 0, 8},
	{0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0},
	{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0},
	{0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0},
	{0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1},
	{118, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1},
	{0, 1, 0, 24, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 98, 0, 1, 1, 1, 1}}
};
constexpr auto cluster_473 = 1;

}

template<typename ModelT>
class bond_image: public spheres {
public:
	bond_image(ModelT const& model, int max_cluster)
		: spheres(20) {
		constexpr auto width = 11;
		constexpr auto half_width = width/2;
		color(0, 0, 0);
		grid();
		for(int i = 0; i < 20; ++i)
		{
			for(int j = 0; j < 21; ++j)
			{
				// horizontal bond
				auto pos_x = i;
				auto pos_y = j;
				auto cluster = model[pos_x][pos_y];
				if(cluster > 0) {
					if(cluster == max_cluster) {
						color(225, 54, 0); // red
					}
					else {
						color(15,146,0); // green
					}
					add_rect(pos_x*scale - half_width, pos_y*scale - half_width, scale + width, width);
				}
				// vertical bond
				pos_x = j;
				pos_y = i;
				cluster = model[20 + pos_y][pos_x];
				if(cluster > 0) {
					if(cluster == max_cluster) {
						color(225, 54, 0); // red
					}
					else {
						color(15,146,0); // green
					}
					add_rect(pos_x*scale - half_width, pos_y*scale - half_width, width, scale + width);
				}
			}
		}
		set_margin(scale/10, scale/10);
	}
};

int main(int argc, const char * argv[]) {
//	auto image = bond_image(model_0, cluster_0);
	auto image = bond_image(model_157, cluster_157);
//	auto image = bond_image(model_314, cluster_314);
//	auto image = bond_image(model_473, cluster_473);
	std::cout << image.get() << std::endl;
	return 0;
}
